name: 'Build and Release'
on:
  push:
    tags: ['v*']
  workflow_dispatch:
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            rust-target: 'aarch64-apple-darwin'
          - platform: 'windows-latest'
            args: ''
            rust-target: ''
    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-target }}
          
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          
      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          
      - name: Install frontend dependencies
        run: npm install
        
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Plasticity Radial Menu Builder v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
          
      - name: Fix macOS bundle for proper quarantine behavior
        if: matrix.platform == 'macos-latest'
        run: |
          # Find the .app bundle
          APP_PATH=$(find src-tauri/target -name "*.app" -type d | head -1)
          if [ -n "$APP_PATH" ]; then
            echo "Found app bundle: $APP_PATH"
            
            # Remove extended attributes that cause "damaged" dialog
            xattr -cr "$APP_PATH"
            
            # Modify Info.plist to reduce security scrutiny
            /usr/libexec/PlistBuddy -c "Set :LSUIElement false" "$APP_PATH/Contents/Info.plist" || true
            /usr/libexec/PlistBuddy -c "Delete :NSAppTransportSecurity" "$APP_PATH/Contents/Info.plist" || true
            
            # Self-sign with minimal identity to avoid corruption detection
            codesign --force --deep --sign - --preserve-metadata=entitlements "$APP_PATH"
            
            echo "Bundle modifications complete"
          else
            echo "No .app bundle found"
          fi
